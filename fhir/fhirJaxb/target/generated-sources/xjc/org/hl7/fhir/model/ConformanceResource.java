//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.03.01 at 01:52:03 AM MST 
//


package org.hl7.fhir.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;


/**
 * A conformance statement is a set of requirements for a desired implementation or a description of how a target application fulfills those requirements in a particular implementation.
 * 
 * <p>Java class for Conformance.Resource complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Conformance.Resource"&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="type" type="{http://hl7.org/fhir}code"/&gt;
 *         &lt;element name="profile" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/&gt;
 *         &lt;element name="operation" type="{http://hl7.org/fhir}Conformance.Operation" maxOccurs="unbounded"/&gt;
 *         &lt;element name="readHistory" type="{http://hl7.org/fhir}boolean" minOccurs="0"/&gt;
 *         &lt;element name="updateCreate" type="{http://hl7.org/fhir}boolean" minOccurs="0"/&gt;
 *         &lt;element name="searchInclude" type="{http://hl7.org/fhir}string" maxOccurs="unbounded" minOccurs="0"/&gt;
 *         &lt;element name="searchParam" type="{http://hl7.org/fhir}Conformance.SearchParam" maxOccurs="unbounded" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Conformance.Resource", propOrder = {
    "type",
    "profile",
    "operations",
    "readHistory",
    "updateCreate",
    "searchIncludes",
    "searchParams"
})
public class ConformanceResource
    extends BackboneElement
    implements Serializable, ToString
{

    @XmlElement(required = true)
    protected Code type;
    protected ResourceReference profile;
    @XmlElement(name = "operation", required = true)
    protected List<ConformanceOperation> operations;
    protected Boolean readHistory;
    protected Boolean updateCreate;
    @XmlElement(name = "searchInclude")
    protected List<org.hl7.fhir.model.String> searchIncludes;
    @XmlElement(name = "searchParam")
    protected List<ConformanceSearchParam> searchParams;

    /**
     * Gets the value of the type property.
     * 
     * @return
     *     possible object is
     *     {@link Code }
     *     
     */
    public Code getType() {
        return type;
    }

    /**
     * Sets the value of the type property.
     * 
     * @param value
     *     allowed object is
     *     {@link Code }
     *     
     */
    public void setType(Code value) {
        this.type = value;
    }

    /**
     * Gets the value of the profile property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    public ResourceReference getProfile() {
        return profile;
    }

    /**
     * Sets the value of the profile property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setProfile(ResourceReference value) {
        this.profile = value;
    }

    /**
     * Gets the value of the operations property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the operations property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getOperations().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConformanceOperation }
     * 
     * 
     */
    public List<ConformanceOperation> getOperations() {
        if (operations == null) {
            operations = new ArrayList<ConformanceOperation>();
        }
        return this.operations;
    }

    /**
     * Gets the value of the readHistory property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getReadHistory() {
        return readHistory;
    }

    /**
     * Sets the value of the readHistory property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setReadHistory(Boolean value) {
        this.readHistory = value;
    }

    /**
     * Gets the value of the updateCreate property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean getUpdateCreate() {
        return updateCreate;
    }

    /**
     * Sets the value of the updateCreate property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setUpdateCreate(Boolean value) {
        this.updateCreate = value;
    }

    /**
     * Gets the value of the searchIncludes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the searchIncludes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSearchIncludes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link org.hl7.fhir.model.String }
     * 
     * 
     */
    public List<org.hl7.fhir.model.String> getSearchIncludes() {
        if (searchIncludes == null) {
            searchIncludes = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.searchIncludes;
    }

    /**
     * Gets the value of the searchParams property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the searchParams property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSearchParams().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ConformanceSearchParam }
     * 
     * 
     */
    public List<ConformanceSearchParam> getSearchParams() {
        if (searchParams == null) {
            searchParams = new ArrayList<ConformanceSearchParam>();
        }
        return this.searchParams;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Code theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            ResourceReference theProfile;
            theProfile = this.getProfile();
            strategy.appendField(locator, this, "profile", buffer, theProfile);
        }
        {
            List<ConformanceOperation> theOperations;
            theOperations = (((this.operations!= null)&&(!this.operations.isEmpty()))?this.getOperations():null);
            strategy.appendField(locator, this, "operations", buffer, theOperations);
        }
        {
            Boolean theReadHistory;
            theReadHistory = this.getReadHistory();
            strategy.appendField(locator, this, "readHistory", buffer, theReadHistory);
        }
        {
            Boolean theUpdateCreate;
            theUpdateCreate = this.getUpdateCreate();
            strategy.appendField(locator, this, "updateCreate", buffer, theUpdateCreate);
        }
        {
            List<org.hl7.fhir.model.String> theSearchIncludes;
            theSearchIncludes = (((this.searchIncludes!= null)&&(!this.searchIncludes.isEmpty()))?this.getSearchIncludes():null);
            strategy.appendField(locator, this, "searchIncludes", buffer, theSearchIncludes);
        }
        {
            List<ConformanceSearchParam> theSearchParams;
            theSearchParams = (((this.searchParams!= null)&&(!this.searchParams.isEmpty()))?this.getSearchParams():null);
            strategy.appendField(locator, this, "searchParams", buffer, theSearchParams);
        }
        return buffer;
    }

}
