//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.09 at 01:15:06 AM MST 
//


package org.hl7.fhir.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have either a @value, an @id, or extensions
 * 
 * <p>Java class for Observation complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Observation">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Resource">
 *       &lt;sequence>
 *         &lt;element name="name" type="{http://hl7.org/fhir}CodeableConcept"/>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="valueQuantity" type="{http://hl7.org/fhir}Quantity"/>
 *           &lt;element name="valueCodeableConcept" type="{http://hl7.org/fhir}CodeableConcept"/>
 *           &lt;element name="valueAttachment" type="{http://hl7.org/fhir}Attachment"/>
 *           &lt;element name="valueRatio" type="{http://hl7.org/fhir}Ratio"/>
 *           &lt;element name="valuePeriod" type="{http://hl7.org/fhir}Period"/>
 *           &lt;element name="valueSampledData" type="{http://hl7.org/fhir}SampledData"/>
 *           &lt;element name="valueString" type="{http://hl7.org/fhir}string"/>
 *         &lt;/choice>
 *         &lt;element name="interpretation" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/>
 *         &lt;element name="comments" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;choice minOccurs="0">
 *           &lt;element name="appliesDateTime" type="{http://hl7.org/fhir}dateTime"/>
 *           &lt;element name="appliesPeriod" type="{http://hl7.org/fhir}Period"/>
 *         &lt;/choice>
 *         &lt;element name="issued" type="{http://hl7.org/fhir}instant" minOccurs="0"/>
 *         &lt;element name="status" type="{http://hl7.org/fhir}ObservationStatus"/>
 *         &lt;element name="reliability" type="{http://hl7.org/fhir}ObservationReliability"/>
 *         &lt;element name="bodySite" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/>
 *         &lt;element name="method" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/>
 *         &lt;element name="identifier" type="{http://hl7.org/fhir}Identifier" minOccurs="0"/>
 *         &lt;element name="subject" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;element name="specimen" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;element name="performer" type="{http://hl7.org/fhir}ResourceReference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="referenceRange" type="{http://hl7.org/fhir}Observation.ReferenceRange" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="related" type="{http://hl7.org/fhir}Observation.Related" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Observation", propOrder = {
    "name",
    "valueString",
    "valueSampledData",
    "valuePeriod",
    "valueRatio",
    "valueAttachment",
    "valueCodeableConcept",
    "valueQuantity",
    "interpretation",
    "comments",
    "appliesPeriod",
    "appliesDateTime",
    "issued",
    "status",
    "reliability",
    "bodySite",
    "method",
    "identifier",
    "subject",
    "specimen",
    "performers",
    "referenceRanges",
    "relateds"
})
@XmlRootElement(name = "Observation")
@Entity(name = "Observation")
@Table(name = "OBSERVATION")
public class Observation
    extends Resource
    implements Serializable, Equals, HashCode
{

    @XmlElement(required = true)
    protected CodeableConcept name;
    protected org.hl7.fhir.model.String valueString;
    protected SampledData valueSampledData;
    protected Period valuePeriod;
    protected Ratio valueRatio;
    protected Attachment valueAttachment;
    protected CodeableConcept valueCodeableConcept;
    protected Quantity valueQuantity;
    protected CodeableConcept interpretation;
    protected org.hl7.fhir.model.String comments;
    protected Period appliesPeriod;
    protected DateTime appliesDateTime;
    protected Instant issued;
    @XmlElement(required = true)
    protected ObservationStatus status;
    @XmlElement(required = true)
    protected ObservationReliability reliability;
    protected CodeableConcept bodySite;
    protected CodeableConcept method;
    protected Identifier identifier;
    protected ResourceReference subject;
    protected ResourceReference specimen;
    @XmlElement(name = "performer")
    protected List<ResourceReference> performers;
    @XmlElement(name = "referenceRange")
    protected List<ObservationReferenceRange> referenceRanges;
    @XmlElement(name = "related")
    protected List<ObservationRelated> relateds;

    /**
     * Gets the value of the name property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__OBSERVATION_HJID")
    public CodeableConcept getName() {
        return name;
    }

    /**
     * Sets the value of the name property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setName(CodeableConcept value) {
        this.name = value;
    }

    /**
     * Gets the value of the valueString property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUESTRING_OBSERVATION_HJID")
    public org.hl7.fhir.model.String getValueString() {
        return valueString;
    }

    /**
     * Sets the value of the valueString property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    public void setValueString(org.hl7.fhir.model.String value) {
        this.valueString = value;
    }

    /**
     * Gets the value of the valueSampledData property.
     * 
     * @return
     *     possible object is
     *     {@link SampledData }
     *     
     */
    @ManyToOne(targetEntity = SampledData.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUESAMPLEDDATA_OBSERVATION_0")
    public SampledData getValueSampledData() {
        return valueSampledData;
    }

    /**
     * Sets the value of the valueSampledData property.
     * 
     * @param value
     *     allowed object is
     *     {@link SampledData }
     *     
     */
    public void setValueSampledData(SampledData value) {
        this.valueSampledData = value;
    }

    /**
     * Gets the value of the valuePeriod property.
     * 
     * @return
     *     possible object is
     *     {@link Period }
     *     
     */
    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEPERIOD_OBSERVATION_HJID")
    public Period getValuePeriod() {
        return valuePeriod;
    }

    /**
     * Sets the value of the valuePeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Period }
     *     
     */
    public void setValuePeriod(Period value) {
        this.valuePeriod = value;
    }

    /**
     * Gets the value of the valueRatio property.
     * 
     * @return
     *     possible object is
     *     {@link Ratio }
     *     
     */
    @ManyToOne(targetEntity = Ratio.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUERATIO_OBSERVATION_HJID")
    public Ratio getValueRatio() {
        return valueRatio;
    }

    /**
     * Sets the value of the valueRatio property.
     * 
     * @param value
     *     allowed object is
     *     {@link Ratio }
     *     
     */
    public void setValueRatio(Ratio value) {
        this.valueRatio = value;
    }

    /**
     * Gets the value of the valueAttachment property.
     * 
     * @return
     *     possible object is
     *     {@link Attachment }
     *     
     */
    @ManyToOne(targetEntity = Attachment.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEATTACHMENT_OBSERVATION__0")
    public Attachment getValueAttachment() {
        return valueAttachment;
    }

    /**
     * Sets the value of the valueAttachment property.
     * 
     * @param value
     *     allowed object is
     *     {@link Attachment }
     *     
     */
    public void setValueAttachment(Attachment value) {
        this.valueAttachment = value;
    }

    /**
     * Gets the value of the valueCodeableConcept property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUECODEABLECONCEPT_OBSERVA_0")
    public CodeableConcept getValueCodeableConcept() {
        return valueCodeableConcept;
    }

    /**
     * Sets the value of the valueCodeableConcept property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setValueCodeableConcept(CodeableConcept value) {
        this.valueCodeableConcept = value;
    }

    /**
     * Gets the value of the valueQuantity property.
     * 
     * @return
     *     possible object is
     *     {@link Quantity }
     *     
     */
    @ManyToOne(targetEntity = Quantity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUEQUANTITY_OBSERVATION_HJ_0")
    public Quantity getValueQuantity() {
        return valueQuantity;
    }

    /**
     * Sets the value of the valueQuantity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Quantity }
     *     
     */
    public void setValueQuantity(Quantity value) {
        this.valueQuantity = value;
    }

    /**
     * Gets the value of the interpretation property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "INTERPRETATION_OBSERVATION_H_0")
    public CodeableConcept getInterpretation() {
        return interpretation;
    }

    /**
     * Sets the value of the interpretation property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setInterpretation(CodeableConcept value) {
        this.interpretation = value;
    }

    /**
     * Gets the value of the comments property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "COMMENTS_OBSERVATION_HJID")
    public org.hl7.fhir.model.String getComments() {
        return comments;
    }

    /**
     * Sets the value of the comments property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    public void setComments(org.hl7.fhir.model.String value) {
        this.comments = value;
    }

    /**
     * Gets the value of the appliesPeriod property.
     * 
     * @return
     *     possible object is
     *     {@link Period }
     *     
     */
    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "APPLIESPERIOD_OBSERVATION_HJ_0")
    public Period getAppliesPeriod() {
        return appliesPeriod;
    }

    /**
     * Sets the value of the appliesPeriod property.
     * 
     * @param value
     *     allowed object is
     *     {@link Period }
     *     
     */
    public void setAppliesPeriod(Period value) {
        this.appliesPeriod = value;
    }

    /**
     * Gets the value of the appliesDateTime property.
     * 
     * @return
     *     possible object is
     *     {@link DateTime }
     *     
     */
    @ManyToOne(targetEntity = DateTime.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "APPLIESDATETIME_OBSERVATION__0")
    public DateTime getAppliesDateTime() {
        return appliesDateTime;
    }

    /**
     * Sets the value of the appliesDateTime property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTime }
     *     
     */
    public void setAppliesDateTime(DateTime value) {
        this.appliesDateTime = value;
    }

    /**
     * Gets the value of the issued property.
     * 
     * @return
     *     possible object is
     *     {@link Instant }
     *     
     */
    @ManyToOne(targetEntity = Instant.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ISSUED_OBSERVATION_HJID")
    public Instant getIssued() {
        return issued;
    }

    /**
     * Sets the value of the issued property.
     * 
     * @param value
     *     allowed object is
     *     {@link Instant }
     *     
     */
    public void setIssued(Instant value) {
        this.issued = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link ObservationStatus }
     *     
     */
    @ManyToOne(targetEntity = ObservationStatus.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATUS_OBSERVATION_HJID")
    public ObservationStatus getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link ObservationStatus }
     *     
     */
    public void setStatus(ObservationStatus value) {
        this.status = value;
    }

    /**
     * Gets the value of the reliability property.
     * 
     * @return
     *     possible object is
     *     {@link ObservationReliability }
     *     
     */
    @ManyToOne(targetEntity = ObservationReliability.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RELIABILITY_OBSERVATION_HJID")
    public ObservationReliability getReliability() {
        return reliability;
    }

    /**
     * Sets the value of the reliability property.
     * 
     * @param value
     *     allowed object is
     *     {@link ObservationReliability }
     *     
     */
    public void setReliability(ObservationReliability value) {
        this.reliability = value;
    }

    /**
     * Gets the value of the bodySite property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "BODYSITE_OBSERVATION_HJID")
    public CodeableConcept getBodySite() {
        return bodySite;
    }

    /**
     * Sets the value of the bodySite property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setBodySite(CodeableConcept value) {
        this.bodySite = value;
    }

    /**
     * Gets the value of the method property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "METHOD__OBSERVATION_HJID")
    public CodeableConcept getMethod() {
        return method;
    }

    /**
     * Sets the value of the method property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setMethod(CodeableConcept value) {
        this.method = value;
    }

    /**
     * Gets the value of the identifier property.
     * 
     * @return
     *     possible object is
     *     {@link Identifier }
     *     
     */
    @ManyToOne(targetEntity = Identifier.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IDENTIFIER_OBSERVATION_HJID")
    public Identifier getIdentifier() {
        return identifier;
    }

    /**
     * Sets the value of the identifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identifier }
     *     
     */
    public void setIdentifier(Identifier value) {
        this.identifier = value;
    }

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SUBJECT_OBSERVATION_HJID")
    public ResourceReference getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setSubject(ResourceReference value) {
        this.subject = value;
    }

    /**
     * Gets the value of the specimen property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SPECIMEN_OBSERVATION_HJID")
    public ResourceReference getSpecimen() {
        return specimen;
    }

    /**
     * Sets the value of the specimen property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setSpecimen(ResourceReference value) {
        this.specimen = value;
    }

    /**
     * Gets the value of the performers property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the performers property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPerformers().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ResourceReference }
     * 
     * 
     */
    @OneToMany(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERFORMERS_OBSERVATION_HJID")
    public List<ResourceReference> getPerformers() {
        if (performers == null) {
            performers = new ArrayList<ResourceReference>();
        }
        return this.performers;
    }

    /**
     * 
     * 
     */
    public void setPerformers(List<ResourceReference> performers) {
        this.performers = performers;
    }

    /**
     * Gets the value of the referenceRanges property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the referenceRanges property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReferenceRanges().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObservationReferenceRange }
     * 
     * 
     */
    @OneToMany(targetEntity = ObservationReferenceRange.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REFERENCERANGES_OBSERVATION__0")
    public List<ObservationReferenceRange> getReferenceRanges() {
        if (referenceRanges == null) {
            referenceRanges = new ArrayList<ObservationReferenceRange>();
        }
        return this.referenceRanges;
    }

    /**
     * 
     * 
     */
    public void setReferenceRanges(List<ObservationReferenceRange> referenceRanges) {
        this.referenceRanges = referenceRanges;
    }

    /**
     * Gets the value of the relateds property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the relateds property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRelateds().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ObservationRelated }
     * 
     * 
     */
    @OneToMany(targetEntity = ObservationRelated.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RELATEDS_OBSERVATION_HJID")
    public List<ObservationRelated> getRelateds() {
        if (relateds == null) {
            relateds = new ArrayList<ObservationRelated>();
        }
        return this.relateds;
    }

    /**
     * 
     * 
     */
    public void setRelateds(List<ObservationRelated> relateds) {
        this.relateds = relateds;
    }

    public Observation withName(CodeableConcept value) {
        setName(value);
        return this;
    }

    public Observation withValueString(org.hl7.fhir.model.String value) {
        setValueString(value);
        return this;
    }

    public Observation withValueSampledData(SampledData value) {
        setValueSampledData(value);
        return this;
    }

    public Observation withValuePeriod(Period value) {
        setValuePeriod(value);
        return this;
    }

    public Observation withValueRatio(Ratio value) {
        setValueRatio(value);
        return this;
    }

    public Observation withValueAttachment(Attachment value) {
        setValueAttachment(value);
        return this;
    }

    public Observation withValueCodeableConcept(CodeableConcept value) {
        setValueCodeableConcept(value);
        return this;
    }

    public Observation withValueQuantity(Quantity value) {
        setValueQuantity(value);
        return this;
    }

    public Observation withInterpretation(CodeableConcept value) {
        setInterpretation(value);
        return this;
    }

    public Observation withComments(org.hl7.fhir.model.String value) {
        setComments(value);
        return this;
    }

    public Observation withAppliesPeriod(Period value) {
        setAppliesPeriod(value);
        return this;
    }

    public Observation withAppliesDateTime(DateTime value) {
        setAppliesDateTime(value);
        return this;
    }

    public Observation withIssued(Instant value) {
        setIssued(value);
        return this;
    }

    public Observation withStatus(ObservationStatus value) {
        setStatus(value);
        return this;
    }

    public Observation withReliability(ObservationReliability value) {
        setReliability(value);
        return this;
    }

    public Observation withBodySite(CodeableConcept value) {
        setBodySite(value);
        return this;
    }

    public Observation withMethod(CodeableConcept value) {
        setMethod(value);
        return this;
    }

    public Observation withIdentifier(Identifier value) {
        setIdentifier(value);
        return this;
    }

    public Observation withSubject(ResourceReference value) {
        setSubject(value);
        return this;
    }

    public Observation withSpecimen(ResourceReference value) {
        setSpecimen(value);
        return this;
    }

    public Observation withPerformers(ResourceReference... values) {
        if (values!= null) {
            for (ResourceReference value: values) {
                getPerformers().add(value);
            }
        }
        return this;
    }

    public Observation withPerformers(Collection<ResourceReference> values) {
        if (values!= null) {
            getPerformers().addAll(values);
        }
        return this;
    }

    public Observation withPerformers(List<ResourceReference> performers) {
        setPerformers(performers);
        return this;
    }

    public Observation withReferenceRanges(ObservationReferenceRange... values) {
        if (values!= null) {
            for (ObservationReferenceRange value: values) {
                getReferenceRanges().add(value);
            }
        }
        return this;
    }

    public Observation withReferenceRanges(Collection<ObservationReferenceRange> values) {
        if (values!= null) {
            getReferenceRanges().addAll(values);
        }
        return this;
    }

    public Observation withReferenceRanges(List<ObservationReferenceRange> referenceRanges) {
        setReferenceRanges(referenceRanges);
        return this;
    }

    public Observation withRelateds(ObservationRelated... values) {
        if (values!= null) {
            for (ObservationRelated value: values) {
                getRelateds().add(value);
            }
        }
        return this;
    }

    public Observation withRelateds(Collection<ObservationRelated> values) {
        if (values!= null) {
            getRelateds().addAll(values);
        }
        return this;
    }

    public Observation withRelateds(List<ObservationRelated> relateds) {
        setRelateds(relateds);
        return this;
    }

    @Override
    public Observation withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    @Override
    public Observation withText(Narrative value) {
        setText(value);
        return this;
    }

    @Override
    public Observation withContaineds(ResourceInline... values) {
        if (values!= null) {
            for (ResourceInline value: values) {
                getContaineds().add(value);
            }
        }
        return this;
    }

    @Override
    public Observation withContaineds(Collection<ResourceInline> values) {
        if (values!= null) {
            getContaineds().addAll(values);
        }
        return this;
    }

    @Override
    public Observation withContaineds(List<ResourceInline> containeds) {
        setContaineds(containeds);
        return this;
    }

    @Override
    public Observation withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public Observation withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public Observation withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public Observation withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public Observation withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public Observation withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public Observation withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Observation)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Observation that = ((Observation) object);
        {
            CodeableConcept lhsName;
            lhsName = this.getName();
            CodeableConcept rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsValueString;
            lhsValueString = this.getValueString();
            org.hl7.fhir.model.String rhsValueString;
            rhsValueString = that.getValueString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueString", lhsValueString), LocatorUtils.property(thatLocator, "valueString", rhsValueString), lhsValueString, rhsValueString)) {
                return false;
            }
        }
        {
            SampledData lhsValueSampledData;
            lhsValueSampledData = this.getValueSampledData();
            SampledData rhsValueSampledData;
            rhsValueSampledData = that.getValueSampledData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueSampledData", lhsValueSampledData), LocatorUtils.property(thatLocator, "valueSampledData", rhsValueSampledData), lhsValueSampledData, rhsValueSampledData)) {
                return false;
            }
        }
        {
            Period lhsValuePeriod;
            lhsValuePeriod = this.getValuePeriod();
            Period rhsValuePeriod;
            rhsValuePeriod = that.getValuePeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valuePeriod", lhsValuePeriod), LocatorUtils.property(thatLocator, "valuePeriod", rhsValuePeriod), lhsValuePeriod, rhsValuePeriod)) {
                return false;
            }
        }
        {
            Ratio lhsValueRatio;
            lhsValueRatio = this.getValueRatio();
            Ratio rhsValueRatio;
            rhsValueRatio = that.getValueRatio();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueRatio", lhsValueRatio), LocatorUtils.property(thatLocator, "valueRatio", rhsValueRatio), lhsValueRatio, rhsValueRatio)) {
                return false;
            }
        }
        {
            Attachment lhsValueAttachment;
            lhsValueAttachment = this.getValueAttachment();
            Attachment rhsValueAttachment;
            rhsValueAttachment = that.getValueAttachment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueAttachment", lhsValueAttachment), LocatorUtils.property(thatLocator, "valueAttachment", rhsValueAttachment), lhsValueAttachment, rhsValueAttachment)) {
                return false;
            }
        }
        {
            CodeableConcept lhsValueCodeableConcept;
            lhsValueCodeableConcept = this.getValueCodeableConcept();
            CodeableConcept rhsValueCodeableConcept;
            rhsValueCodeableConcept = that.getValueCodeableConcept();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueCodeableConcept", lhsValueCodeableConcept), LocatorUtils.property(thatLocator, "valueCodeableConcept", rhsValueCodeableConcept), lhsValueCodeableConcept, rhsValueCodeableConcept)) {
                return false;
            }
        }
        {
            Quantity lhsValueQuantity;
            lhsValueQuantity = this.getValueQuantity();
            Quantity rhsValueQuantity;
            rhsValueQuantity = that.getValueQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "valueQuantity", lhsValueQuantity), LocatorUtils.property(thatLocator, "valueQuantity", rhsValueQuantity), lhsValueQuantity, rhsValueQuantity)) {
                return false;
            }
        }
        {
            CodeableConcept lhsInterpretation;
            lhsInterpretation = this.getInterpretation();
            CodeableConcept rhsInterpretation;
            rhsInterpretation = that.getInterpretation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "interpretation", lhsInterpretation), LocatorUtils.property(thatLocator, "interpretation", rhsInterpretation), lhsInterpretation, rhsInterpretation)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsComments;
            lhsComments = this.getComments();
            org.hl7.fhir.model.String rhsComments;
            rhsComments = that.getComments();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "comments", lhsComments), LocatorUtils.property(thatLocator, "comments", rhsComments), lhsComments, rhsComments)) {
                return false;
            }
        }
        {
            Period lhsAppliesPeriod;
            lhsAppliesPeriod = this.getAppliesPeriod();
            Period rhsAppliesPeriod;
            rhsAppliesPeriod = that.getAppliesPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "appliesPeriod", lhsAppliesPeriod), LocatorUtils.property(thatLocator, "appliesPeriod", rhsAppliesPeriod), lhsAppliesPeriod, rhsAppliesPeriod)) {
                return false;
            }
        }
        {
            DateTime lhsAppliesDateTime;
            lhsAppliesDateTime = this.getAppliesDateTime();
            DateTime rhsAppliesDateTime;
            rhsAppliesDateTime = that.getAppliesDateTime();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "appliesDateTime", lhsAppliesDateTime), LocatorUtils.property(thatLocator, "appliesDateTime", rhsAppliesDateTime), lhsAppliesDateTime, rhsAppliesDateTime)) {
                return false;
            }
        }
        {
            Instant lhsIssued;
            lhsIssued = this.getIssued();
            Instant rhsIssued;
            rhsIssued = that.getIssued();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "issued", lhsIssued), LocatorUtils.property(thatLocator, "issued", rhsIssued), lhsIssued, rhsIssued)) {
                return false;
            }
        }
        {
            ObservationStatus lhsStatus;
            lhsStatus = this.getStatus();
            ObservationStatus rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            ObservationReliability lhsReliability;
            lhsReliability = this.getReliability();
            ObservationReliability rhsReliability;
            rhsReliability = that.getReliability();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reliability", lhsReliability), LocatorUtils.property(thatLocator, "reliability", rhsReliability), lhsReliability, rhsReliability)) {
                return false;
            }
        }
        {
            CodeableConcept lhsBodySite;
            lhsBodySite = this.getBodySite();
            CodeableConcept rhsBodySite;
            rhsBodySite = that.getBodySite();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bodySite", lhsBodySite), LocatorUtils.property(thatLocator, "bodySite", rhsBodySite), lhsBodySite, rhsBodySite)) {
                return false;
            }
        }
        {
            CodeableConcept lhsMethod;
            lhsMethod = this.getMethod();
            CodeableConcept rhsMethod;
            rhsMethod = that.getMethod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "method", lhsMethod), LocatorUtils.property(thatLocator, "method", rhsMethod), lhsMethod, rhsMethod)) {
                return false;
            }
        }
        {
            Identifier lhsIdentifier;
            lhsIdentifier = this.getIdentifier();
            Identifier rhsIdentifier;
            rhsIdentifier = that.getIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "identifier", lhsIdentifier), LocatorUtils.property(thatLocator, "identifier", rhsIdentifier), lhsIdentifier, rhsIdentifier)) {
                return false;
            }
        }
        {
            ResourceReference lhsSubject;
            lhsSubject = this.getSubject();
            ResourceReference rhsSubject;
            rhsSubject = that.getSubject();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "subject", lhsSubject), LocatorUtils.property(thatLocator, "subject", rhsSubject), lhsSubject, rhsSubject)) {
                return false;
            }
        }
        {
            ResourceReference lhsSpecimen;
            lhsSpecimen = this.getSpecimen();
            ResourceReference rhsSpecimen;
            rhsSpecimen = that.getSpecimen();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "specimen", lhsSpecimen), LocatorUtils.property(thatLocator, "specimen", rhsSpecimen), lhsSpecimen, rhsSpecimen)) {
                return false;
            }
        }
        {
            List<ResourceReference> lhsPerformers;
            lhsPerformers = (((this.performers!= null)&&(!this.performers.isEmpty()))?this.getPerformers():null);
            List<ResourceReference> rhsPerformers;
            rhsPerformers = (((that.performers!= null)&&(!that.performers.isEmpty()))?that.getPerformers():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "performers", lhsPerformers), LocatorUtils.property(thatLocator, "performers", rhsPerformers), lhsPerformers, rhsPerformers)) {
                return false;
            }
        }
        {
            List<ObservationReferenceRange> lhsReferenceRanges;
            lhsReferenceRanges = (((this.referenceRanges!= null)&&(!this.referenceRanges.isEmpty()))?this.getReferenceRanges():null);
            List<ObservationReferenceRange> rhsReferenceRanges;
            rhsReferenceRanges = (((that.referenceRanges!= null)&&(!that.referenceRanges.isEmpty()))?that.getReferenceRanges():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referenceRanges", lhsReferenceRanges), LocatorUtils.property(thatLocator, "referenceRanges", rhsReferenceRanges), lhsReferenceRanges, rhsReferenceRanges)) {
                return false;
            }
        }
        {
            List<ObservationRelated> lhsRelateds;
            lhsRelateds = (((this.relateds!= null)&&(!this.relateds.isEmpty()))?this.getRelateds():null);
            List<ObservationRelated> rhsRelateds;
            rhsRelateds = (((that.relateds!= null)&&(!that.relateds.isEmpty()))?that.getRelateds():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relateds", lhsRelateds), LocatorUtils.property(thatLocator, "relateds", rhsRelateds), lhsRelateds, rhsRelateds)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CodeableConcept theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            org.hl7.fhir.model.String theValueString;
            theValueString = this.getValueString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueString", theValueString), currentHashCode, theValueString);
        }
        {
            SampledData theValueSampledData;
            theValueSampledData = this.getValueSampledData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueSampledData", theValueSampledData), currentHashCode, theValueSampledData);
        }
        {
            Period theValuePeriod;
            theValuePeriod = this.getValuePeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valuePeriod", theValuePeriod), currentHashCode, theValuePeriod);
        }
        {
            Ratio theValueRatio;
            theValueRatio = this.getValueRatio();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueRatio", theValueRatio), currentHashCode, theValueRatio);
        }
        {
            Attachment theValueAttachment;
            theValueAttachment = this.getValueAttachment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueAttachment", theValueAttachment), currentHashCode, theValueAttachment);
        }
        {
            CodeableConcept theValueCodeableConcept;
            theValueCodeableConcept = this.getValueCodeableConcept();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueCodeableConcept", theValueCodeableConcept), currentHashCode, theValueCodeableConcept);
        }
        {
            Quantity theValueQuantity;
            theValueQuantity = this.getValueQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "valueQuantity", theValueQuantity), currentHashCode, theValueQuantity);
        }
        {
            CodeableConcept theInterpretation;
            theInterpretation = this.getInterpretation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "interpretation", theInterpretation), currentHashCode, theInterpretation);
        }
        {
            org.hl7.fhir.model.String theComments;
            theComments = this.getComments();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "comments", theComments), currentHashCode, theComments);
        }
        {
            Period theAppliesPeriod;
            theAppliesPeriod = this.getAppliesPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "appliesPeriod", theAppliesPeriod), currentHashCode, theAppliesPeriod);
        }
        {
            DateTime theAppliesDateTime;
            theAppliesDateTime = this.getAppliesDateTime();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "appliesDateTime", theAppliesDateTime), currentHashCode, theAppliesDateTime);
        }
        {
            Instant theIssued;
            theIssued = this.getIssued();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "issued", theIssued), currentHashCode, theIssued);
        }
        {
            ObservationStatus theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            ObservationReliability theReliability;
            theReliability = this.getReliability();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reliability", theReliability), currentHashCode, theReliability);
        }
        {
            CodeableConcept theBodySite;
            theBodySite = this.getBodySite();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bodySite", theBodySite), currentHashCode, theBodySite);
        }
        {
            CodeableConcept theMethod;
            theMethod = this.getMethod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "method", theMethod), currentHashCode, theMethod);
        }
        {
            Identifier theIdentifier;
            theIdentifier = this.getIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "identifier", theIdentifier), currentHashCode, theIdentifier);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "subject", theSubject), currentHashCode, theSubject);
        }
        {
            ResourceReference theSpecimen;
            theSpecimen = this.getSpecimen();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "specimen", theSpecimen), currentHashCode, theSpecimen);
        }
        {
            List<ResourceReference> thePerformers;
            thePerformers = (((this.performers!= null)&&(!this.performers.isEmpty()))?this.getPerformers():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "performers", thePerformers), currentHashCode, thePerformers);
        }
        {
            List<ObservationReferenceRange> theReferenceRanges;
            theReferenceRanges = (((this.referenceRanges!= null)&&(!this.referenceRanges.isEmpty()))?this.getReferenceRanges():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referenceRanges", theReferenceRanges), currentHashCode, theReferenceRanges);
        }
        {
            List<ObservationRelated> theRelateds;
            theRelateds = (((this.relateds!= null)&&(!this.relateds.isEmpty()))?this.getRelateds():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relateds", theRelateds), currentHashCode, theRelateds);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
