//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.09 at 01:15:06 AM MST 
//


package org.hl7.fhir.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have either a @value, an @id, or extensions
 * 
 * <p>Java class for CarePlan complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="CarePlan">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Resource">
 *       &lt;sequence>
 *         &lt;element name="identifier" type="{http://hl7.org/fhir}Identifier" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="patient" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;element name="status" type="{http://hl7.org/fhir}CarePlanStatus"/>
 *         &lt;element name="period" type="{http://hl7.org/fhir}Period" minOccurs="0"/>
 *         &lt;element name="modified" type="{http://hl7.org/fhir}dateTime" minOccurs="0"/>
 *         &lt;element name="concern" type="{http://hl7.org/fhir}ResourceReference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="participant" type="{http://hl7.org/fhir}CarePlan.Participant" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="goal" type="{http://hl7.org/fhir}CarePlan.Goal" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="activity" type="{http://hl7.org/fhir}CarePlan.Activity" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="notes" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CarePlan", propOrder = {
    "identifiers",
    "patient",
    "status",
    "period",
    "modified",
    "concerns",
    "participants",
    "goals",
    "activities",
    "notes"
})
@XmlRootElement(name = "CarePlan")
@Entity(name = "CarePlan")
@Table(name = "CAREPLAN")
public class CarePlan
    extends Resource
    implements Serializable, Equals, HashCode
{

    @XmlElement(name = "identifier")
    protected List<Identifier> identifiers;
    protected ResourceReference patient;
    @XmlElement(required = true)
    protected CarePlanStatus status;
    protected Period period;
    protected DateTime modified;
    @XmlElement(name = "concern")
    protected List<ResourceReference> concerns;
    @XmlElement(name = "participant")
    protected List<CarePlanParticipant> participants;
    @XmlElement(name = "goal")
    protected List<CarePlanGoal> goals;
    @XmlElement(name = "activity")
    protected List<CarePlanActivity> activities;
    protected org.hl7.fhir.model.String notes;

    /**
     * Gets the value of the identifiers property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the identifiers property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIdentifiers().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Identifier }
     * 
     * 
     */
    @OneToMany(targetEntity = Identifier.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IDENTIFIERS_CAREPLAN_HJID")
    public List<Identifier> getIdentifiers() {
        if (identifiers == null) {
            identifiers = new ArrayList<Identifier>();
        }
        return this.identifiers;
    }

    /**
     * 
     * 
     */
    public void setIdentifiers(List<Identifier> identifiers) {
        this.identifiers = identifiers;
    }

    /**
     * Gets the value of the patient property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PATIENT_CAREPLAN_HJID")
    public ResourceReference getPatient() {
        return patient;
    }

    /**
     * Sets the value of the patient property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setPatient(ResourceReference value) {
        this.patient = value;
    }

    /**
     * Gets the value of the status property.
     * 
     * @return
     *     possible object is
     *     {@link CarePlanStatus }
     *     
     */
    @ManyToOne(targetEntity = CarePlanStatus.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATUS_CAREPLAN_HJID")
    public CarePlanStatus getStatus() {
        return status;
    }

    /**
     * Sets the value of the status property.
     * 
     * @param value
     *     allowed object is
     *     {@link CarePlanStatus }
     *     
     */
    public void setStatus(CarePlanStatus value) {
        this.status = value;
    }

    /**
     * Gets the value of the period property.
     * 
     * @return
     *     possible object is
     *     {@link Period }
     *     
     */
    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERIOD_CAREPLAN_HJID")
    public Period getPeriod() {
        return period;
    }

    /**
     * Sets the value of the period property.
     * 
     * @param value
     *     allowed object is
     *     {@link Period }
     *     
     */
    public void setPeriod(Period value) {
        this.period = value;
    }

    /**
     * Gets the value of the modified property.
     * 
     * @return
     *     possible object is
     *     {@link DateTime }
     *     
     */
    @ManyToOne(targetEntity = DateTime.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MODIFIED_CAREPLAN_HJID")
    public DateTime getModified() {
        return modified;
    }

    /**
     * Sets the value of the modified property.
     * 
     * @param value
     *     allowed object is
     *     {@link DateTime }
     *     
     */
    public void setModified(DateTime value) {
        this.modified = value;
    }

    /**
     * Gets the value of the concerns property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the concerns property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getConcerns().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ResourceReference }
     * 
     * 
     */
    @OneToMany(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONCERNS_CAREPLAN_HJID")
    public List<ResourceReference> getConcerns() {
        if (concerns == null) {
            concerns = new ArrayList<ResourceReference>();
        }
        return this.concerns;
    }

    /**
     * 
     * 
     */
    public void setConcerns(List<ResourceReference> concerns) {
        this.concerns = concerns;
    }

    /**
     * Gets the value of the participants property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the participants property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getParticipants().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CarePlanParticipant }
     * 
     * 
     */
    @OneToMany(targetEntity = CarePlanParticipant.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PARTICIPANTS_CAREPLAN_HJID")
    public List<CarePlanParticipant> getParticipants() {
        if (participants == null) {
            participants = new ArrayList<CarePlanParticipant>();
        }
        return this.participants;
    }

    /**
     * 
     * 
     */
    public void setParticipants(List<CarePlanParticipant> participants) {
        this.participants = participants;
    }

    /**
     * Gets the value of the goals property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the goals property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGoals().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CarePlanGoal }
     * 
     * 
     */
    @OneToMany(targetEntity = CarePlanGoal.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "GOALS_CAREPLAN_HJID")
    public List<CarePlanGoal> getGoals() {
        if (goals == null) {
            goals = new ArrayList<CarePlanGoal>();
        }
        return this.goals;
    }

    /**
     * 
     * 
     */
    public void setGoals(List<CarePlanGoal> goals) {
        this.goals = goals;
    }

    /**
     * Gets the value of the activities property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the activities property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getActivities().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CarePlanActivity }
     * 
     * 
     */
    @OneToMany(targetEntity = CarePlanActivity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ACTIVITIES_CAREPLAN_HJID")
    public List<CarePlanActivity> getActivities() {
        if (activities == null) {
            activities = new ArrayList<CarePlanActivity>();
        }
        return this.activities;
    }

    /**
     * 
     * 
     */
    public void setActivities(List<CarePlanActivity> activities) {
        this.activities = activities;
    }

    /**
     * Gets the value of the notes property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NOTES_CAREPLAN_HJID")
    public org.hl7.fhir.model.String getNotes() {
        return notes;
    }

    /**
     * Sets the value of the notes property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    public void setNotes(org.hl7.fhir.model.String value) {
        this.notes = value;
    }

    public CarePlan withIdentifiers(Identifier... values) {
        if (values!= null) {
            for (Identifier value: values) {
                getIdentifiers().add(value);
            }
        }
        return this;
    }

    public CarePlan withIdentifiers(Collection<Identifier> values) {
        if (values!= null) {
            getIdentifiers().addAll(values);
        }
        return this;
    }

    public CarePlan withIdentifiers(List<Identifier> identifiers) {
        setIdentifiers(identifiers);
        return this;
    }

    public CarePlan withPatient(ResourceReference value) {
        setPatient(value);
        return this;
    }

    public CarePlan withStatus(CarePlanStatus value) {
        setStatus(value);
        return this;
    }

    public CarePlan withPeriod(Period value) {
        setPeriod(value);
        return this;
    }

    public CarePlan withModified(DateTime value) {
        setModified(value);
        return this;
    }

    public CarePlan withConcerns(ResourceReference... values) {
        if (values!= null) {
            for (ResourceReference value: values) {
                getConcerns().add(value);
            }
        }
        return this;
    }

    public CarePlan withConcerns(Collection<ResourceReference> values) {
        if (values!= null) {
            getConcerns().addAll(values);
        }
        return this;
    }

    public CarePlan withConcerns(List<ResourceReference> concerns) {
        setConcerns(concerns);
        return this;
    }

    public CarePlan withParticipants(CarePlanParticipant... values) {
        if (values!= null) {
            for (CarePlanParticipant value: values) {
                getParticipants().add(value);
            }
        }
        return this;
    }

    public CarePlan withParticipants(Collection<CarePlanParticipant> values) {
        if (values!= null) {
            getParticipants().addAll(values);
        }
        return this;
    }

    public CarePlan withParticipants(List<CarePlanParticipant> participants) {
        setParticipants(participants);
        return this;
    }

    public CarePlan withGoals(CarePlanGoal... values) {
        if (values!= null) {
            for (CarePlanGoal value: values) {
                getGoals().add(value);
            }
        }
        return this;
    }

    public CarePlan withGoals(Collection<CarePlanGoal> values) {
        if (values!= null) {
            getGoals().addAll(values);
        }
        return this;
    }

    public CarePlan withGoals(List<CarePlanGoal> goals) {
        setGoals(goals);
        return this;
    }

    public CarePlan withActivities(CarePlanActivity... values) {
        if (values!= null) {
            for (CarePlanActivity value: values) {
                getActivities().add(value);
            }
        }
        return this;
    }

    public CarePlan withActivities(Collection<CarePlanActivity> values) {
        if (values!= null) {
            getActivities().addAll(values);
        }
        return this;
    }

    public CarePlan withActivities(List<CarePlanActivity> activities) {
        setActivities(activities);
        return this;
    }

    public CarePlan withNotes(org.hl7.fhir.model.String value) {
        setNotes(value);
        return this;
    }

    @Override
    public CarePlan withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    @Override
    public CarePlan withText(Narrative value) {
        setText(value);
        return this;
    }

    @Override
    public CarePlan withContaineds(ResourceInline... values) {
        if (values!= null) {
            for (ResourceInline value: values) {
                getContaineds().add(value);
            }
        }
        return this;
    }

    @Override
    public CarePlan withContaineds(Collection<ResourceInline> values) {
        if (values!= null) {
            getContaineds().addAll(values);
        }
        return this;
    }

    @Override
    public CarePlan withContaineds(List<ResourceInline> containeds) {
        setContaineds(containeds);
        return this;
    }

    @Override
    public CarePlan withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public CarePlan withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public CarePlan withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public CarePlan withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public CarePlan withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public CarePlan withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public CarePlan withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CarePlan)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CarePlan that = ((CarePlan) object);
        {
            List<Identifier> lhsIdentifiers;
            lhsIdentifiers = (((this.identifiers!= null)&&(!this.identifiers.isEmpty()))?this.getIdentifiers():null);
            List<Identifier> rhsIdentifiers;
            rhsIdentifiers = (((that.identifiers!= null)&&(!that.identifiers.isEmpty()))?that.getIdentifiers():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "identifiers", lhsIdentifiers), LocatorUtils.property(thatLocator, "identifiers", rhsIdentifiers), lhsIdentifiers, rhsIdentifiers)) {
                return false;
            }
        }
        {
            ResourceReference lhsPatient;
            lhsPatient = this.getPatient();
            ResourceReference rhsPatient;
            rhsPatient = that.getPatient();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "patient", lhsPatient), LocatorUtils.property(thatLocator, "patient", rhsPatient), lhsPatient, rhsPatient)) {
                return false;
            }
        }
        {
            CarePlanStatus lhsStatus;
            lhsStatus = this.getStatus();
            CarePlanStatus rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            Period lhsPeriod;
            lhsPeriod = this.getPeriod();
            Period rhsPeriod;
            rhsPeriod = that.getPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "period", lhsPeriod), LocatorUtils.property(thatLocator, "period", rhsPeriod), lhsPeriod, rhsPeriod)) {
                return false;
            }
        }
        {
            DateTime lhsModified;
            lhsModified = this.getModified();
            DateTime rhsModified;
            rhsModified = that.getModified();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modified", lhsModified), LocatorUtils.property(thatLocator, "modified", rhsModified), lhsModified, rhsModified)) {
                return false;
            }
        }
        {
            List<ResourceReference> lhsConcerns;
            lhsConcerns = (((this.concerns!= null)&&(!this.concerns.isEmpty()))?this.getConcerns():null);
            List<ResourceReference> rhsConcerns;
            rhsConcerns = (((that.concerns!= null)&&(!that.concerns.isEmpty()))?that.getConcerns():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "concerns", lhsConcerns), LocatorUtils.property(thatLocator, "concerns", rhsConcerns), lhsConcerns, rhsConcerns)) {
                return false;
            }
        }
        {
            List<CarePlanParticipant> lhsParticipants;
            lhsParticipants = (((this.participants!= null)&&(!this.participants.isEmpty()))?this.getParticipants():null);
            List<CarePlanParticipant> rhsParticipants;
            rhsParticipants = (((that.participants!= null)&&(!that.participants.isEmpty()))?that.getParticipants():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "participants", lhsParticipants), LocatorUtils.property(thatLocator, "participants", rhsParticipants), lhsParticipants, rhsParticipants)) {
                return false;
            }
        }
        {
            List<CarePlanGoal> lhsGoals;
            lhsGoals = (((this.goals!= null)&&(!this.goals.isEmpty()))?this.getGoals():null);
            List<CarePlanGoal> rhsGoals;
            rhsGoals = (((that.goals!= null)&&(!that.goals.isEmpty()))?that.getGoals():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "goals", lhsGoals), LocatorUtils.property(thatLocator, "goals", rhsGoals), lhsGoals, rhsGoals)) {
                return false;
            }
        }
        {
            List<CarePlanActivity> lhsActivities;
            lhsActivities = (((this.activities!= null)&&(!this.activities.isEmpty()))?this.getActivities():null);
            List<CarePlanActivity> rhsActivities;
            rhsActivities = (((that.activities!= null)&&(!that.activities.isEmpty()))?that.getActivities():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "activities", lhsActivities), LocatorUtils.property(thatLocator, "activities", rhsActivities), lhsActivities, rhsActivities)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsNotes;
            lhsNotes = this.getNotes();
            org.hl7.fhir.model.String rhsNotes;
            rhsNotes = that.getNotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notes", lhsNotes), LocatorUtils.property(thatLocator, "notes", rhsNotes), lhsNotes, rhsNotes)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<Identifier> theIdentifiers;
            theIdentifiers = (((this.identifiers!= null)&&(!this.identifiers.isEmpty()))?this.getIdentifiers():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "identifiers", theIdentifiers), currentHashCode, theIdentifiers);
        }
        {
            ResourceReference thePatient;
            thePatient = this.getPatient();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "patient", thePatient), currentHashCode, thePatient);
        }
        {
            CarePlanStatus theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            Period thePeriod;
            thePeriod = this.getPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "period", thePeriod), currentHashCode, thePeriod);
        }
        {
            DateTime theModified;
            theModified = this.getModified();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modified", theModified), currentHashCode, theModified);
        }
        {
            List<ResourceReference> theConcerns;
            theConcerns = (((this.concerns!= null)&&(!this.concerns.isEmpty()))?this.getConcerns():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "concerns", theConcerns), currentHashCode, theConcerns);
        }
        {
            List<CarePlanParticipant> theParticipants;
            theParticipants = (((this.participants!= null)&&(!this.participants.isEmpty()))?this.getParticipants():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "participants", theParticipants), currentHashCode, theParticipants);
        }
        {
            List<CarePlanGoal> theGoals;
            theGoals = (((this.goals!= null)&&(!this.goals.isEmpty()))?this.getGoals():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "goals", theGoals), currentHashCode, theGoals);
        }
        {
            List<CarePlanActivity> theActivities;
            theActivities = (((this.activities!= null)&&(!this.activities.isEmpty()))?this.getActivities():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "activities", theActivities), currentHashCode, theActivities);
        }
        {
            org.hl7.fhir.model.String theNotes;
            theNotes = this.getNotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notes", theNotes), currentHashCode, theNotes);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
