//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.09 at 01:15:06 AM MST 
//


package org.hl7.fhir.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * A Resource Profile - a statement of use of one or more FHIR Resources.  It may include constraints on Resources and Data Types, Terminology Binding Statements and Extension Definitions.
 * 
 * <p>Java class for Profile.ExtensionDefn complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Profile.ExtensionDefn">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}BackboneElement">
 *       &lt;sequence>
 *         &lt;element name="code" type="{http://hl7.org/fhir}code"/>
 *         &lt;element name="display" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *         &lt;element name="contextType" type="{http://hl7.org/fhir}ExtensionContext"/>
 *         &lt;element name="context" type="{http://hl7.org/fhir}string" maxOccurs="unbounded"/>
 *         &lt;element name="definition" type="{http://hl7.org/fhir}Profile.Definition"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.ExtensionDefn", propOrder = {
    "code",
    "display",
    "contextType",
    "contexts",
    "definition"
})
@Entity(name = "ProfileExtensionDefn")
@Table(name = "PROFILEEXTENSIONDEFN")
public class ProfileExtensionDefn
    extends BackboneElement
    implements Serializable, Equals, HashCode
{

    @XmlElement(required = true)
    protected Code code;
    protected org.hl7.fhir.model.String display;
    @XmlElement(required = true)
    protected ExtensionContext contextType;
    @XmlElement(name = "context", required = true)
    protected List<org.hl7.fhir.model.String> contexts;
    @XmlElement(required = true)
    protected ProfileDefinition definition;

    /**
     * Gets the value of the code property.
     * 
     * @return
     *     possible object is
     *     {@link Code }
     *     
     */
    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CODE_PROFILEEXTENSIONDEFN_HJ_0")
    public Code getCode() {
        return code;
    }

    /**
     * Sets the value of the code property.
     * 
     * @param value
     *     allowed object is
     *     {@link Code }
     *     
     */
    public void setCode(Code value) {
        this.code = value;
    }

    /**
     * Gets the value of the display property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DISPLAY_PROFILEEXTENSIONDEFN_0")
    public org.hl7.fhir.model.String getDisplay() {
        return display;
    }

    /**
     * Sets the value of the display property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    public void setDisplay(org.hl7.fhir.model.String value) {
        this.display = value;
    }

    /**
     * Gets the value of the contextType property.
     * 
     * @return
     *     possible object is
     *     {@link ExtensionContext }
     *     
     */
    @ManyToOne(targetEntity = ExtensionContext.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTEXTTYPE_PROFILEEXTENSION_0")
    public ExtensionContext getContextType() {
        return contextType;
    }

    /**
     * Sets the value of the contextType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ExtensionContext }
     *     
     */
    public void setContextType(ExtensionContext value) {
        this.contextType = value;
    }

    /**
     * Gets the value of the contexts property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the contexts property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getContexts().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link org.hl7.fhir.model.String }
     * 
     * 
     */
    @OneToMany(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTEXTS_PROFILEEXTENSIONDEF_0")
    public List<org.hl7.fhir.model.String> getContexts() {
        if (contexts == null) {
            contexts = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.contexts;
    }

    /**
     * 
     * 
     */
    public void setContexts(List<org.hl7.fhir.model.String> contexts) {
        this.contexts = contexts;
    }

    /**
     * Gets the value of the definition property.
     * 
     * @return
     *     possible object is
     *     {@link ProfileDefinition }
     *     
     */
    @ManyToOne(targetEntity = ProfileDefinition.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DEFINITION_PROFILEEXTENSIOND_0")
    public ProfileDefinition getDefinition() {
        return definition;
    }

    /**
     * Sets the value of the definition property.
     * 
     * @param value
     *     allowed object is
     *     {@link ProfileDefinition }
     *     
     */
    public void setDefinition(ProfileDefinition value) {
        this.definition = value;
    }

    public ProfileExtensionDefn withCode(Code value) {
        setCode(value);
        return this;
    }

    public ProfileExtensionDefn withDisplay(org.hl7.fhir.model.String value) {
        setDisplay(value);
        return this;
    }

    public ProfileExtensionDefn withContextType(ExtensionContext value) {
        setContextType(value);
        return this;
    }

    public ProfileExtensionDefn withContexts(org.hl7.fhir.model.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.model.String value: values) {
                getContexts().add(value);
            }
        }
        return this;
    }

    public ProfileExtensionDefn withContexts(Collection<org.hl7.fhir.model.String> values) {
        if (values!= null) {
            getContexts().addAll(values);
        }
        return this;
    }

    public ProfileExtensionDefn withContexts(List<org.hl7.fhir.model.String> contexts) {
        setContexts(contexts);
        return this;
    }

    public ProfileExtensionDefn withDefinition(ProfileDefinition value) {
        setDefinition(value);
        return this;
    }

    @Override
    public ProfileExtensionDefn withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileExtensionDefn withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileExtensionDefn withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ProfileExtensionDefn withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileExtensionDefn withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileExtensionDefn withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ProfileExtensionDefn withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProfileExtensionDefn)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ProfileExtensionDefn that = ((ProfileExtensionDefn) object);
        {
            Code lhsCode;
            lhsCode = this.getCode();
            Code rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsDisplay;
            lhsDisplay = this.getDisplay();
            org.hl7.fhir.model.String rhsDisplay;
            rhsDisplay = that.getDisplay();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "display", lhsDisplay), LocatorUtils.property(thatLocator, "display", rhsDisplay), lhsDisplay, rhsDisplay)) {
                return false;
            }
        }
        {
            ExtensionContext lhsContextType;
            lhsContextType = this.getContextType();
            ExtensionContext rhsContextType;
            rhsContextType = that.getContextType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contextType", lhsContextType), LocatorUtils.property(thatLocator, "contextType", rhsContextType), lhsContextType, rhsContextType)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.model.String> lhsContexts;
            lhsContexts = (((this.contexts!= null)&&(!this.contexts.isEmpty()))?this.getContexts():null);
            List<org.hl7.fhir.model.String> rhsContexts;
            rhsContexts = (((that.contexts!= null)&&(!that.contexts.isEmpty()))?that.getContexts():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contexts", lhsContexts), LocatorUtils.property(thatLocator, "contexts", rhsContexts), lhsContexts, rhsContexts)) {
                return false;
            }
        }
        {
            ProfileDefinition lhsDefinition;
            lhsDefinition = this.getDefinition();
            ProfileDefinition rhsDefinition;
            rhsDefinition = that.getDefinition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "definition", lhsDefinition), LocatorUtils.property(thatLocator, "definition", rhsDefinition), lhsDefinition, rhsDefinition)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Code theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        {
            org.hl7.fhir.model.String theDisplay;
            theDisplay = this.getDisplay();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "display", theDisplay), currentHashCode, theDisplay);
        }
        {
            ExtensionContext theContextType;
            theContextType = this.getContextType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contextType", theContextType), currentHashCode, theContextType);
        }
        {
            List<org.hl7.fhir.model.String> theContexts;
            theContexts = (((this.contexts!= null)&&(!this.contexts.isEmpty()))?this.getContexts():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contexts", theContexts), currentHashCode, theContexts);
        }
        {
            ProfileDefinition theDefinition;
            theDefinition = this.getDefinition();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "definition", theDefinition), currentHashCode, theDefinition);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
