//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.09 at 01:15:06 AM MST 
//


package org.hl7.fhir.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * The base element used for all FHIR elements and resources - allows for them to be extended with extensions
 * 
 * <p>Java class for Element complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Element">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="extension" type="{http://hl7.org/fhir}Extension" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="id" type="{http://hl7.org/fhir}id-primitive" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Element", propOrder = {
    "extensions"
})
@XmlSeeAlso({
    Extension.class,
    Code.class,
    Narrative.class,
    ResourceReference.class,
    Period.class,
    Instant.class,
    CodeableConcept.class,
    Uri.class,
    org.hl7.fhir.model.String.class,
    Identifier.class,
    Date.class,
    ConditionStatus.class,
    Boolean.class,
    CarePlanStatus.class,
    DateTime.class,
    SupplyStatus.class,
    Contact.class,
    Address.class,
    DiagnosticReportStatus.class,
    Attachment.class,
    GroupType.class,
    Integer.class,
    ValueSetStatus.class,
    MedicationKind.class,
    org.hl7.fhir.model.Id.class,
    Coding.class,
    DocumentReferenceStatus.class,
    MedicationDispenseStatus.class,
    MedicationPrescriptionStatus.class,
    MedicationAdministrationStatus.class,
    EncounterState.class,
    EncounterClass.class,
    ListMode.class,
    QuestionnaireStatus.class,
    CompositionStatus.class,
    ConformanceStatementStatus.class,
    MediaType.class,
    ResourceProfileStatus.class,
    LocationStatus.class,
    LocationMode.class,
    SampledData.class,
    Ratio.class,
    ObservationStatus.class,
    ObservationReliability.class,
    Criticality.class,
    SensitivityType.class,
    SensitivityStatus.class,
    HumanName.class,
    OrderOutcomeStatus.class,
    AlertStatus.class,
    Oid.class,
    ImagingModality.class,
    InstanceAvailability.class,
    DiagnosticOrderStatus.class,
    DiagnosticOrderPriority.class,
    SecurityEventAction.class,
    CausalityExpectation.class,
    SupplyDispenseStatus.class,
    ProcedureRelationshipType.class,
    IdentifierUse.class,
    ExtensionContext.class,
    Schedule.class,
    Range.class,
    HierarchicalRelationshipType.class,
    NameUse.class,
    CarePlanActivityCategory.class,
    RestfulOperationType.class,
    ScheduleRepeat.class,
    ObservationRelationshipType.class,
    UnitsOfTime.class,
    ResponseType.class,
    AggregationMode.class,
    CarePlanGoalStatus.class,
    QuantityCompararator.class,
    ConditionRelationshipType.class,
    SecurityEventOutcome.class,
    SecurityEventParticipantNetworkType.class,
    SecurityEventObjectLifecycle.class,
    SlicingRules.class,
    ContactUse.class,
    LinkType.class,
    EventTiming.class,
    ProvenanceEntityRole.class,
    PropertyRepresentation.class,
    ConstraintSeverity.class,
    SampledDataDataType.class,
    FilterOperator.class,
    ConformanceEventMode.class,
    Uuid.class,
    Modality.class,
    RestfulOperationSystem.class,
    RestfulConformanceMode.class,
    NarrativeStatus.class,
    SearchParamType.class,
    BindingConformance.class,
    SecurityEventObjectType.class,
    ExposureType.class,
    Base64Binary.class,
    AddressUse.class,
    CompositionAttestationMode.class,
    SecurityEventObjectRole.class,
    CarePlanActivityStatus.class,
    QueryOutcome.class,
    MessageSignificanceCategory.class,
    ConceptMapEquivalence.class,
    ReactionSeverity.class,
    ContactSystem.class,
    DocumentRelationshipType.class,
    DocumentMode.class,
    Quantity.class,
    IssueSeverity.class,
    Decimal.class,
    BackboneElement.class
})
@Entity(name = "Element")
@Table(name = "ELEMENT")
@Inheritance(strategy = InheritanceType.JOINED)
public class Element
    implements Serializable, Equals, HashCode
{

    @XmlElement(name = "extension")
    protected List<Extension> extensions;
    @XmlAttribute(name = "id")
    protected java.lang.String id;
    @XmlAttribute(name = "Hjid")
    protected Long hjid;

    /**
     * Gets the value of the extensions property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the extensions property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExtensions().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Extension }
     * 
     * 
     */
    @OneToMany(targetEntity = Extension.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "EXTENSIONS_ELEMENT_HJID")
    public List<Extension> getExtensions() {
        if (extensions == null) {
            extensions = new ArrayList<Extension>();
        }
        return this.extensions;
    }

    /**
     * 
     * 
     */
    public void setExtensions(List<Extension> extensions) {
        this.extensions = extensions;
    }

    /**
     * Gets the value of the id property.
     * 
     * @return
     *     possible object is
     *     {@link java.lang.String }
     *     
     */
    @Basic
    @Column(name = "ID", length = 255)
    public java.lang.String getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     * @param value
     *     allowed object is
     *     {@link java.lang.String }
     *     
     */
    public void setId(java.lang.String value) {
        this.id = value;
    }

    public Element withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    public Element withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    public Element withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    public Element withId(java.lang.String value) {
        setId(value);
        return this;
    }

    /**
     * Gets the value of the hjid property.
     * 
     * @return
     *     possible object is
     *     {@link Long }
     *     
     */
    @javax.persistence.Id
    @Column(name = "HJID")
    @GeneratedValue(strategy = GenerationType.AUTO)
    public Long getHjid() {
        return hjid;
    }

    /**
     * Sets the value of the hjid property.
     * 
     * @param value
     *     allowed object is
     *     {@link Long }
     *     
     */
    public void setHjid(Long value) {
        this.hjid = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Element)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final Element that = ((Element) object);
        {
            List<Extension> lhsExtensions;
            lhsExtensions = (((this.extensions!= null)&&(!this.extensions.isEmpty()))?this.getExtensions():null);
            List<Extension> rhsExtensions;
            rhsExtensions = (((that.extensions!= null)&&(!that.extensions.isEmpty()))?that.getExtensions():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extensions", lhsExtensions), LocatorUtils.property(thatLocator, "extensions", rhsExtensions), lhsExtensions, rhsExtensions)) {
                return false;
            }
        }
        {
            java.lang.String lhsId;
            lhsId = this.getId();
            java.lang.String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<Extension> theExtensions;
            theExtensions = (((this.extensions!= null)&&(!this.extensions.isEmpty()))?this.getExtensions():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extensions", theExtensions), currentHashCode, theExtensions);
        }
        {
            java.lang.String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
