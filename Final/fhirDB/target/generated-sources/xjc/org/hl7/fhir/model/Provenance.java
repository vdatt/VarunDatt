//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.09 at 01:15:06 AM MST 
//


package org.hl7.fhir.model;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * If the element is present, it must have either a @value, an @id, or extensions
 * 
 * <p>Java class for Provenance complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Provenance">
 *   &lt;complexContent>
 *     &lt;extension base="{http://hl7.org/fhir}Resource">
 *       &lt;sequence>
 *         &lt;element name="target" type="{http://hl7.org/fhir}ResourceReference" maxOccurs="unbounded"/>
 *         &lt;element name="period" type="{http://hl7.org/fhir}Period" minOccurs="0"/>
 *         &lt;element name="recorded" type="{http://hl7.org/fhir}instant"/>
 *         &lt;element name="reason" type="{http://hl7.org/fhir}CodeableConcept" minOccurs="0"/>
 *         &lt;element name="location" type="{http://hl7.org/fhir}ResourceReference" minOccurs="0"/>
 *         &lt;element name="policy" type="{http://hl7.org/fhir}uri" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="agent" type="{http://hl7.org/fhir}Provenance.Agent" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="entity" type="{http://hl7.org/fhir}Provenance.Entity" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="integritySignature" type="{http://hl7.org/fhir}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Provenance", propOrder = {
    "targets",
    "period",
    "recorded",
    "reason",
    "location",
    "policies",
    "agents",
    "entities",
    "integritySignature"
})
@XmlRootElement(name = "Provenance")
@Entity(name = "Provenance")
@Table(name = "PROVENANCE")
public class Provenance
    extends Resource
    implements Serializable, Equals, HashCode
{

    @XmlElement(name = "target", required = true)
    protected List<ResourceReference> targets;
    protected Period period;
    @XmlElement(required = true)
    protected Instant recorded;
    protected CodeableConcept reason;
    protected ResourceReference location;
    @XmlElement(name = "policy")
    protected List<Uri> policies;
    @XmlElement(name = "agent")
    protected List<ProvenanceAgent> agents;
    @XmlElement(name = "entity")
    protected List<ProvenanceEntity> entities;
    protected org.hl7.fhir.model.String integritySignature;

    /**
     * Gets the value of the targets property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the targets property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTargets().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ResourceReference }
     * 
     * 
     */
    @OneToMany(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TARGETS_PROVENANCE_HJID")
    public List<ResourceReference> getTargets() {
        if (targets == null) {
            targets = new ArrayList<ResourceReference>();
        }
        return this.targets;
    }

    /**
     * 
     * 
     */
    public void setTargets(List<ResourceReference> targets) {
        this.targets = targets;
    }

    /**
     * Gets the value of the period property.
     * 
     * @return
     *     possible object is
     *     {@link Period }
     *     
     */
    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERIOD_PROVENANCE_HJID")
    public Period getPeriod() {
        return period;
    }

    /**
     * Sets the value of the period property.
     * 
     * @param value
     *     allowed object is
     *     {@link Period }
     *     
     */
    public void setPeriod(Period value) {
        this.period = value;
    }

    /**
     * Gets the value of the recorded property.
     * 
     * @return
     *     possible object is
     *     {@link Instant }
     *     
     */
    @ManyToOne(targetEntity = Instant.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RECORDED_PROVENANCE_HJID")
    public Instant getRecorded() {
        return recorded;
    }

    /**
     * Sets the value of the recorded property.
     * 
     * @param value
     *     allowed object is
     *     {@link Instant }
     *     
     */
    public void setRecorded(Instant value) {
        this.recorded = value;
    }

    /**
     * Gets the value of the reason property.
     * 
     * @return
     *     possible object is
     *     {@link CodeableConcept }
     *     
     */
    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REASON_PROVENANCE_HJID")
    public CodeableConcept getReason() {
        return reason;
    }

    /**
     * Sets the value of the reason property.
     * 
     * @param value
     *     allowed object is
     *     {@link CodeableConcept }
     *     
     */
    public void setReason(CodeableConcept value) {
        this.reason = value;
    }

    /**
     * Gets the value of the location property.
     * 
     * @return
     *     possible object is
     *     {@link ResourceReference }
     *     
     */
    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LOCATION__PROVENANCE_HJID")
    public ResourceReference getLocation() {
        return location;
    }

    /**
     * Sets the value of the location property.
     * 
     * @param value
     *     allowed object is
     *     {@link ResourceReference }
     *     
     */
    public void setLocation(ResourceReference value) {
        this.location = value;
    }

    /**
     * Gets the value of the policies property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the policies property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPolicies().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Uri }
     * 
     * 
     */
    @OneToMany(targetEntity = Uri.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "POLICIES_PROVENANCE_HJID")
    public List<Uri> getPolicies() {
        if (policies == null) {
            policies = new ArrayList<Uri>();
        }
        return this.policies;
    }

    /**
     * 
     * 
     */
    public void setPolicies(List<Uri> policies) {
        this.policies = policies;
    }

    /**
     * Gets the value of the agents property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the agents property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAgents().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProvenanceAgent }
     * 
     * 
     */
    @OneToMany(targetEntity = ProvenanceAgent.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "AGENTS_PROVENANCE_HJID")
    public List<ProvenanceAgent> getAgents() {
        if (agents == null) {
            agents = new ArrayList<ProvenanceAgent>();
        }
        return this.agents;
    }

    /**
     * 
     * 
     */
    public void setAgents(List<ProvenanceAgent> agents) {
        this.agents = agents;
    }

    /**
     * Gets the value of the entities property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the entities property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEntities().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProvenanceEntity }
     * 
     * 
     */
    @OneToMany(targetEntity = ProvenanceEntity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ENTITIES_PROVENANCE_HJID")
    public List<ProvenanceEntity> getEntities() {
        if (entities == null) {
            entities = new ArrayList<ProvenanceEntity>();
        }
        return this.entities;
    }

    /**
     * 
     * 
     */
    public void setEntities(List<ProvenanceEntity> entities) {
        this.entities = entities;
    }

    /**
     * Gets the value of the integritySignature property.
     * 
     * @return
     *     possible object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "INTEGRITYSIGNATURE_PROVENANC_0")
    public org.hl7.fhir.model.String getIntegritySignature() {
        return integritySignature;
    }

    /**
     * Sets the value of the integritySignature property.
     * 
     * @param value
     *     allowed object is
     *     {@link org.hl7.fhir.model.String }
     *     
     */
    public void setIntegritySignature(org.hl7.fhir.model.String value) {
        this.integritySignature = value;
    }

    public Provenance withTargets(ResourceReference... values) {
        if (values!= null) {
            for (ResourceReference value: values) {
                getTargets().add(value);
            }
        }
        return this;
    }

    public Provenance withTargets(Collection<ResourceReference> values) {
        if (values!= null) {
            getTargets().addAll(values);
        }
        return this;
    }

    public Provenance withTargets(List<ResourceReference> targets) {
        setTargets(targets);
        return this;
    }

    public Provenance withPeriod(Period value) {
        setPeriod(value);
        return this;
    }

    public Provenance withRecorded(Instant value) {
        setRecorded(value);
        return this;
    }

    public Provenance withReason(CodeableConcept value) {
        setReason(value);
        return this;
    }

    public Provenance withLocation(ResourceReference value) {
        setLocation(value);
        return this;
    }

    public Provenance withPolicies(Uri... values) {
        if (values!= null) {
            for (Uri value: values) {
                getPolicies().add(value);
            }
        }
        return this;
    }

    public Provenance withPolicies(Collection<Uri> values) {
        if (values!= null) {
            getPolicies().addAll(values);
        }
        return this;
    }

    public Provenance withPolicies(List<Uri> policies) {
        setPolicies(policies);
        return this;
    }

    public Provenance withAgents(ProvenanceAgent... values) {
        if (values!= null) {
            for (ProvenanceAgent value: values) {
                getAgents().add(value);
            }
        }
        return this;
    }

    public Provenance withAgents(Collection<ProvenanceAgent> values) {
        if (values!= null) {
            getAgents().addAll(values);
        }
        return this;
    }

    public Provenance withAgents(List<ProvenanceAgent> agents) {
        setAgents(agents);
        return this;
    }

    public Provenance withEntities(ProvenanceEntity... values) {
        if (values!= null) {
            for (ProvenanceEntity value: values) {
                getEntities().add(value);
            }
        }
        return this;
    }

    public Provenance withEntities(Collection<ProvenanceEntity> values) {
        if (values!= null) {
            getEntities().addAll(values);
        }
        return this;
    }

    public Provenance withEntities(List<ProvenanceEntity> entities) {
        setEntities(entities);
        return this;
    }

    public Provenance withIntegritySignature(org.hl7.fhir.model.String value) {
        setIntegritySignature(value);
        return this;
    }

    @Override
    public Provenance withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    @Override
    public Provenance withText(Narrative value) {
        setText(value);
        return this;
    }

    @Override
    public Provenance withContaineds(ResourceInline... values) {
        if (values!= null) {
            for (ResourceInline value: values) {
                getContaineds().add(value);
            }
        }
        return this;
    }

    @Override
    public Provenance withContaineds(Collection<ResourceInline> values) {
        if (values!= null) {
            getContaineds().addAll(values);
        }
        return this;
    }

    @Override
    public Provenance withContaineds(List<ResourceInline> containeds) {
        setContaineds(containeds);
        return this;
    }

    @Override
    public Provenance withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public Provenance withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public Provenance withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public Provenance withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public Provenance withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public Provenance withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public Provenance withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Provenance)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Provenance that = ((Provenance) object);
        {
            List<ResourceReference> lhsTargets;
            lhsTargets = (((this.targets!= null)&&(!this.targets.isEmpty()))?this.getTargets():null);
            List<ResourceReference> rhsTargets;
            rhsTargets = (((that.targets!= null)&&(!that.targets.isEmpty()))?that.getTargets():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "targets", lhsTargets), LocatorUtils.property(thatLocator, "targets", rhsTargets), lhsTargets, rhsTargets)) {
                return false;
            }
        }
        {
            Period lhsPeriod;
            lhsPeriod = this.getPeriod();
            Period rhsPeriod;
            rhsPeriod = that.getPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "period", lhsPeriod), LocatorUtils.property(thatLocator, "period", rhsPeriod), lhsPeriod, rhsPeriod)) {
                return false;
            }
        }
        {
            Instant lhsRecorded;
            lhsRecorded = this.getRecorded();
            Instant rhsRecorded;
            rhsRecorded = that.getRecorded();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "recorded", lhsRecorded), LocatorUtils.property(thatLocator, "recorded", rhsRecorded), lhsRecorded, rhsRecorded)) {
                return false;
            }
        }
        {
            CodeableConcept lhsReason;
            lhsReason = this.getReason();
            CodeableConcept rhsReason;
            rhsReason = that.getReason();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reason", lhsReason), LocatorUtils.property(thatLocator, "reason", rhsReason), lhsReason, rhsReason)) {
                return false;
            }
        }
        {
            ResourceReference lhsLocation;
            lhsLocation = this.getLocation();
            ResourceReference rhsLocation;
            rhsLocation = that.getLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "location", lhsLocation), LocatorUtils.property(thatLocator, "location", rhsLocation), lhsLocation, rhsLocation)) {
                return false;
            }
        }
        {
            List<Uri> lhsPolicies;
            lhsPolicies = (((this.policies!= null)&&(!this.policies.isEmpty()))?this.getPolicies():null);
            List<Uri> rhsPolicies;
            rhsPolicies = (((that.policies!= null)&&(!that.policies.isEmpty()))?that.getPolicies():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "policies", lhsPolicies), LocatorUtils.property(thatLocator, "policies", rhsPolicies), lhsPolicies, rhsPolicies)) {
                return false;
            }
        }
        {
            List<ProvenanceAgent> lhsAgents;
            lhsAgents = (((this.agents!= null)&&(!this.agents.isEmpty()))?this.getAgents():null);
            List<ProvenanceAgent> rhsAgents;
            rhsAgents = (((that.agents!= null)&&(!that.agents.isEmpty()))?that.getAgents():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "agents", lhsAgents), LocatorUtils.property(thatLocator, "agents", rhsAgents), lhsAgents, rhsAgents)) {
                return false;
            }
        }
        {
            List<ProvenanceEntity> lhsEntities;
            lhsEntities = (((this.entities!= null)&&(!this.entities.isEmpty()))?this.getEntities():null);
            List<ProvenanceEntity> rhsEntities;
            rhsEntities = (((that.entities!= null)&&(!that.entities.isEmpty()))?that.getEntities():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "entities", lhsEntities), LocatorUtils.property(thatLocator, "entities", rhsEntities), lhsEntities, rhsEntities)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsIntegritySignature;
            lhsIntegritySignature = this.getIntegritySignature();
            org.hl7.fhir.model.String rhsIntegritySignature;
            rhsIntegritySignature = that.getIntegritySignature();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "integritySignature", lhsIntegritySignature), LocatorUtils.property(thatLocator, "integritySignature", rhsIntegritySignature), lhsIntegritySignature, rhsIntegritySignature)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<ResourceReference> theTargets;
            theTargets = (((this.targets!= null)&&(!this.targets.isEmpty()))?this.getTargets():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "targets", theTargets), currentHashCode, theTargets);
        }
        {
            Period thePeriod;
            thePeriod = this.getPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "period", thePeriod), currentHashCode, thePeriod);
        }
        {
            Instant theRecorded;
            theRecorded = this.getRecorded();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "recorded", theRecorded), currentHashCode, theRecorded);
        }
        {
            CodeableConcept theReason;
            theReason = this.getReason();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reason", theReason), currentHashCode, theReason);
        }
        {
            ResourceReference theLocation;
            theLocation = this.getLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "location", theLocation), currentHashCode, theLocation);
        }
        {
            List<Uri> thePolicies;
            thePolicies = (((this.policies!= null)&&(!this.policies.isEmpty()))?this.getPolicies():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "policies", thePolicies), currentHashCode, thePolicies);
        }
        {
            List<ProvenanceAgent> theAgents;
            theAgents = (((this.agents!= null)&&(!this.agents.isEmpty()))?this.getAgents():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "agents", theAgents), currentHashCode, theAgents);
        }
        {
            List<ProvenanceEntity> theEntities;
            theEntities = (((this.entities!= null)&&(!this.entities.isEmpty()))?this.getEntities():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "entities", theEntities), currentHashCode, theEntities);
        }
        {
            org.hl7.fhir.model.String theIntegritySignature;
            theIntegritySignature = this.getIntegritySignature();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "integritySignature", theIntegritySignature), currentHashCode, theIntegritySignature);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
